---
import PosthogLayout from './PosthogLayout.astro'
const {
	title = "Монгол латин → кирилл хөрвүүлэгч",
	description = "Монгол латин бичгийг кирилл болгон хөрвүүлдэг хялбар хэрэгсэл. Шууд хөрвүүлж, хуулж болно.",
	ogImage,
	url
} = Astro.props;
import "../global.css";
const canonical = (url ?? Astro.url).toString();
const siteName = "Кирилл хөрвүүлэгч";
const ogImageUrl = ogImage ? new URL(ogImage, canonical).toString() : undefined;
const ogImageAlt = "Монгол латин → кирилл хөрвүүлэгч — MGL Convert";
const ogImageType = ogImage?.endsWith('.svg') ? 'image/svg+xml' : 'image/png';
const ogImageWidth = 1200;
const ogImageHeight = 630;
---

<!doctype html>
<html lang="mn">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="alternate" hreflang="mn" href={canonical} />
		<meta name="theme-color" content="#0a0a0a" media="(prefers-color-scheme: dark)" />
		<meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
		<script>

			try {
				const stored = localStorage.getItem('theme');
				const systemPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
				const isDark = stored ? stored === 'dark' : systemPrefersDark;
				if (isDark) document.documentElement.classList.add('dark');
				else document.documentElement.classList.remove('dark');
			} catch (e) {}
		</script>
		<script is:inline>
    !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init Ce js Ls Te Fs Ds capture Ye calculateEventProperties Us register register_once register_for_session unregister unregister_for_session Ws getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey displaySurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Bs zs createPersonProfile Hs Ms Gs opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing get_explicit_consent_status is_capturing clear_opt_in_out_capturing Ns debug L qs getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
    posthog.init('phc_bOW6Z0vqnvpX1ZKSHu0X4ZjzTpRIjyn7KEo0wF7sgQt', {
        api_host: 'https://us.i.posthog.com',
        defaults: '2025-05-24',
        person_profiles: 'always'
    })
</script>
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta name="keywords" content="монгол латин кирилл хөрвүүлэгч, монгол хэл, латин бичгийг кирилл болгох, онлайн хөрвүүлэгч, монгол латин кирилл, mongol bichig, mongol hurvuulegch, mongol latin krilleer, kirilleer hurvuulegch, " />
		<meta name="author" content="MGL Convert" />
		<meta name="robots" content="index,follow" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:locale" content="mn_MN" />
		<meta property="og:site_name" content={siteName} />
		<meta property="og:url" content={canonical} />
		{ogImageUrl && <meta property="og:image" content={ogImageUrl} />}
		{ogImageUrl && <meta property="og:image:width" content={String(ogImageWidth)} />}
		{ogImageUrl && <meta property="og:image:height" content={String(ogImageHeight)} />}
		{ogImageUrl && <meta property="og:image:type" content={ogImageType} />}
		{ogImageUrl && <meta property="og:image:alt" content={ogImageAlt} />}
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		{ogImageUrl && <meta name="twitter:image" content={ogImageUrl} />}
		{ogImageUrl && <meta name="twitter:image:alt" content={ogImageAlt} />}
		<link rel="canonical" href={canonical} />
		<slot name="head" />
	</head>
	<body class="relative min-h-dvh bg-background antialiased">
		<div class="pointer-events-none fixed inset-0 -z-10 bg-[radial-gradient(circle_at_1px_1px,rgba(0,0,0,0.35)_1px,transparent_0)] bg-[size:20px_20px] dark:bg-[radial-gradient(circle_at_1px_1px,rgba(255,255,255,0.12)_1px,transparent_0)]" aria-hidden="true"></div>
		<div class="pointer-events-none fixed inset-0 -z-10 bg-[radial-gradient(800px_400px_at_50%_-120px,rgba(255,200,88,0.14),transparent)] dark:bg-[radial-gradient(800px_400px_at_50%_-120px,rgba(255,180,50,0.16),transparent)]"></div>
		<div class="pointer-events-none fixed inset-0 -z-10 bg-[linear-gradient(90deg,rgba(0,0,0,0.04)_1px,transparent_1px),linear-gradient(0deg,rgba(0,0,0,0.04)_1px,transparent_1px)] bg-[size:22px_22px] dark:bg-[linear-gradient(90deg,rgba(255,255,255,0.06)_1px,transparent_1px),linear-gradient(0deg,rgba(255,255,255,0.06)_1px,transparent_1px)]"></div>
		<div class="pointer-events-none fixed inset-0 -z-10 overflow-hidden"style={{
			background: "radial-gradient(circle at 1px 1px, rgba(0, 0, 0, 0.35) 1px, transparent 0)",
			backgroundSize: "20px 20px"
		}}>
			<div class="absolute left-1/2 top-[-8rem] h-[28rem] w-[40rem] -translate-x-1/2 rounded-full bg-gradient-to-r from-amber-300/35 via-orange-300/25 to-rose-300/30 blur-3xl dark:from-amber-400/25 dark:via-orange-400/20 dark:to-rose-400/25"></div>
		</div>

		
		<slot />
		<button id="theme-toggle" class="fixed right-4 top-4 z-[9999] inline-flex items-center gap-1 rounded-lg border-2 border-border bg-background px-2 py-1 text-xs text-foreground shadow-lg hover:bg-secondary hover:text-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 transition-colors" aria-label="Toggle theme">
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.75" class="h-3 w-3 block dark:hidden" aria-hidden="true">
				<circle cx="12" cy="12" r="4"></circle>
				<line x1="12" y1="2" x2="12" y2="5" stroke-linecap="round"></line>
				<line x1="12" y1="19" x2="12" y2="22" stroke-linecap="round"></line>
				<line x1="2" y1="12" x2="5" y2="12" stroke-linecap="round"></line>
				<line x1="19" y1="12" x2="22" y2="12" stroke-linecap="round"></line>
				<line x1="4.22" y1="4.22" x2="6.34" y2="6.34" stroke-linecap="round"></line>
				<line x1="17.66" y1="17.66" x2="19.78" y2="19.78" stroke-linecap="round"></line>
				<line x1="4.22" y1="19.78" x2="6.34" y2="17.66" stroke-linecap="round"></line>
				<line x1="17.66" y1="6.34" x2="19.78" y2="4.22" stroke-linecap="round"></line>
			</svg>
			<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.75" class="h-3 w-3 hidden dark:block" aria-hidden="true">
				<path stroke-linecap="round" stroke-linejoin="round" d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79Z" />
			</svg>
			<span class="sr-only">Сэдэв солих</span>
		</button>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const btn = document.getElementById('theme-toggle');
				if (!btn) return;
				btn.addEventListener('click', () => {
					const isDark = document.documentElement.classList.toggle('dark');
					try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch (e) {}
				});
			});
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		min-height: 100%;
	}
</style>